<?php

declare(strict_types=1);

// Подключаем собственный логгер, чтобы иметь возможность писать понятные
// сообщения в файл логов без зависимости от автозагрузчика Composer.
require_once __DIR__ . '/bracelet/logger.php';

// Импортируем функции логирования из пространства имён Bracelet,
// чтобы обращаться к ним без указания полного имени.
use function Bracelet\logError;
use function Bracelet\logInfo;

// Формируем путь к автозагрузчику Composer.
$autoload = __DIR__ . '/vendor/autoload.php';

// Перед подключением проверяем существование файла автозагрузчика.
if (!file_exists($autoload)) {
    // Сообщаем о проблеме в лог и подсказываем действие пользователю.
    logError('Файл autoload.php отсутствует. Выполните "composer install".');

    // Прерываем выполнение, так как без автозагрузчика библиотека dotenv недоступна.
    throw new RuntimeException('Не найден автозагрузчик Composer.');
}

// Подключаем автозагрузчик, чтобы использовать библиотеку vlucas/phpdotenv.
require_once $autoload;

use Dotenv\Dotenv;

/**
 * Загружает переменные окружения для конкретного Telegram-бота.
 *
 * Функция ищет файл вида `.env.<имя_бота>` и с помощью библиотеки
 * `vlucas/phpdotenv` подгружает переменные окружения в `$_ENV` и
 * процесс. По умолчанию поиск выполняется в корневом каталоге проекта,
 * однако путь можно переопределить аргументом или переменной окружения
 * `DOTENV_PATH`.
 *
 * @param string      $botName  Имя бота, которое соответствует суффиксу в названии файла.
 * @param string|null $basePath Альтернативный каталог с `.env`. Если не задан,
 *                              используется переменная `DOTENV_PATH` или
 *                              корень проекта.
 *
 * @throws RuntimeException Если файл с переменными окружения не найден.
 *
 * @return void
 */
function loadBotEnv(string $botName, ?string $basePath = null): void
{
    // Формируем имя файла с настройками вида `.env.<botName>`.
    $envFile = ".env.$botName";

    // Определяем каталог: аргумент, затем переменная окружения DOTENV_PATH, иначе корень проекта.
    $basePath = $basePath ?? getenv('DOTENV_PATH') ?: __DIR__;

    // Полный путь к файлу окружения.
    $fullPath = $basePath . DIRECTORY_SEPARATOR . $envFile;
    if (!file_exists($fullPath)) {
        throw new RuntimeException("Файл окружения {$envFile} не найден в {$basePath}");
    }

    /**
     * Информируем через наш логгер о начале чтения переменных
     * окружения из найденного файла. Это позволяет отслеживать,
     * какие настройки были использованы при запуске бота.
     */
    logInfo("Загружаем переменные из {$fullPath}");

    // Загружаем переменные окружения из указанного файла.
    $dotenv = Dotenv::createImmutable($basePath, $envFile);
    $dotenv->load();

    /**
     * Проверяем наличие обязательной переменной BOT_TOKEN после
     * загрузки. Если она не обнаружена, выводим предупреждающее
     * сообщение в лог, чтобы упростить диагностику проблем.
     */
    if (getenv('BOT_TOKEN') === false) {
        // Фиксируем отсутствие обязательного токена в лог как ошибку.
        logError('Переменная BOT_TOKEN не найдена после загрузки.');
    } else {
        // Сообщаем, что токен успешно считан.
        logInfo('Переменная BOT_TOKEN успешно загружена.');
    }
}
