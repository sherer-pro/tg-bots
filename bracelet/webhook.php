<?php
require 'config.php';
require 'calc.php';

// –ü–æ–ª—É—á–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∏ IP-–∞–¥—Ä–µ—Å –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
$headers  = function_exists('getallheaders') ? getallheaders() : [];
$remoteIp = $_SERVER['REMOTE_ADDR'] ?? '';

// –°–µ–∫—Ä–µ—Ç–Ω—ã–π —Ç–æ–∫–µ–Ω, –∑–∞–¥–∞–Ω–Ω—ã–π –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
$secret = $_ENV['WEBHOOK_SECRET'] ?? getenv('WEBHOOK_SECRET') ?: '';
$tokenValid = $secret !== ''
    && isset($headers['X-Telegram-Bot-Api-Secret-Token'])
    && hash_equals($secret, $headers['X-Telegram-Bot-Api-Secret-Token']);

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞–ø—Ä–æ—Å –ø—Ä–∏—à—ë–ª –æ—Ç Telegram (–ø–æ —Ç–æ–∫–µ–Ω—É –∏–ª–∏ IP)
if (!$tokenValid && !isTelegramIP($remoteIp)) {
    // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º–æ–º –∑–∞–ø—Ä–æ—Å–µ –≤ –ª–æ–≥
    logError('–ù–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–π –∑–∞–ø—Ä–æ—Å: IP ' . $remoteIp . ', —Ç–æ–∫–µ–Ω: ' . ($headers['X-Telegram-Bot-Api-Secret-Token'] ?? ''));
    http_response_code(403);
    exit;
}

// –°—á–∏—Ç—ã–≤–∞–µ–º —Ç–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞ –∏ –ø—ã—Ç–∞–µ–º—Å—è –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞—Ç—å JSON
$body   = file_get_contents('php://input');
$update = json_decode($body, true);
if ($update === null && json_last_error() !== JSON_ERROR_NONE) {
    // –ï—Å–ª–∏ JSON –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω, —Ñ–∏–∫—Å–∏—Ä—É–µ–º —ç—Ç–æ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º 400
    logError('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π JSON –≤–æ –≤—Ö–æ–¥—è—â–µ–º –∑–∞–ø—Ä–æ—Å–µ: ' . $body);
    http_response_code(400);
    exit;
}
if (!isset($update['message'])) {
    exit;
}
$msg    = $update['message'];
$chatId = $msg['chat']['id'];

try {
    // –ü—ã—Ç–∞–µ–º—Å—è —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
    $pdo = new PDO(DB_DSN, DB_USER, DB_PASSWORD, [
        PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION
    ]);
} catch (PDOException $e) {
    // –ü—Ä–∏ –æ—à–∏–±–∫–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ª–æ–≥–∏—Ä—É–µ–º –¥–µ—Ç–∞–ª–∏
    $userLang = $msg['from']['language_code'] ?? 'ru';
    $text     = $userLang === 'en'
        ? 'Database connection error. Please try again later.'
        : '–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.';
    logError('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î: ' . $e->getMessage());
    send($text, $chatId);
    exit;
}

if (isset($msg['text']) && $msg['text'] === '/start') {
    $kb = [
        'keyboard' => [[[
            'text' => 'üßÆ Calculator',
            'web_app' => ['url' => WEBAPP_URL]
        ]]],
        'resize_keyboard' => true
    ];
    // –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    $sent = send('–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É, –∑–∞–ø–æ–ª–Ω–∏ —Ñ–æ—Ä–º—É –∏ –ø–æ–ª—É—á–∏ —Ä–∞—Å—á—ë—Ç', $chatId, ['reply_markup' => json_encode($kb)]);
    if (!$sent) {
        // –ï—Å–ª–∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å, —É–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ—Ç–¥–µ–ª—å–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
        send('–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.', $chatId);
    }
    exit;
}

if (isset($msg['web_app_data']['data'])) {
    // –î–µ–∫–æ–¥–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ web_app –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å JSON
    $raw = $msg['web_app_data']['data'];
    $d   = json_decode($raw, true);
    if ($d === null && json_last_error() !== JSON_ERROR_NONE) {
        // –ü—Ä–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–º JSON —Ñ–∏–∫—Å–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –∏ –ø—Ä–µ–∫—Ä–∞—â–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É
        logError('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π JSON –≤ web_app_data: ' . $raw);
        $userLang = $msg['from']['language_code'] ?? 'ru';
        $text     = $userLang === 'en' ? 'Error in data. Try again.' : '–û—à–∏–±–∫–∞ –≤ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑.';
        if (!send($text, $chatId)) {
            $fallback = $userLang === 'en'
                ? 'Failed to send message. Try again later.'
                : '–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.';
            send($fallback, $chatId);
        }
        exit;
    }
    $lang = $d['lang'] ?? 'ru';

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∏ —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö
    if (!isValidWebAppData($d)) {
        logError('–ù–µ–≤–∞–ª–∏–¥–Ω—ã–µ web_app_data: ' . json_encode($msg['web_app_data'], JSON_UNESCAPED_UNICODE));
        $text = $lang === 'en' ? 'Error in data. Try again.' : '–û—à–∏–±–∫–∞ –≤ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑.';
        // –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ –Ω–µ–≤–µ—Ä–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –æ—Ç–ø—Ä–∞–≤–∫–∏
        if (!send($text, $chatId)) {
            $fallback = $lang === 'en'
                ? 'Failed to send message. Try again later.'
                : '–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.';
            send($fallback, $chatId);
        }
        exit;
    }

    try {
        $text = braceletText(
            (float)$d['wrist_cm'],
            (int)  $d['wraps'],
            array_map('floatval', explode(',', $d['pattern'])),
            (float)$d['magnet_mm'],
            (float)$d['tolerance_mm'],
            $lang
        );

        $stmt = $pdo->prepare('INSERT INTO log'
            . ' (tg_user_id,wrist_cm,wraps,pattern,magnet_mm,tolerance_mm,result_text)'
            . ' VALUES (?,?,?,?,?,?,?)');
        $stmt->execute([
            $msg['from']['id'], $d['wrist_cm'], $d['wraps'],
            $d['pattern'], $d['magnet_mm'], $d['tolerance_mm'], $text
        ]);
    } catch (\Throwable $e) {
        // –õ–æ–≥–∏—Ä—É–µ–º –¥–µ—Ç–∞–ª–∏ –∏—Å–∫–ª—é—á–µ–Ω–∏—è –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–Ω—è—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        logError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ SQL: ' . $e->getMessage());
        $text = $lang === 'en' ? 'Error in data. Try again.' : '–û—à–∏–±–∫–∞ –≤ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑.';
    }
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏ —É–≤–µ–¥–æ–º–ª—è–µ–º –æ —Å–±–æ–µ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
    if (!send($text, $chatId)) {
        $fallback = $lang === 'en'
            ? 'Failed to send message. Try again later.'
            : '–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.';
        send($fallback, $chatId);
    }
}

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é Telegram —á–µ—Ä–µ–∑ –º–µ—Ç–æ–¥ sendMessage.
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç HTTP POST-–∑–∞–ø—Ä–æ—Å –∫ Bot API. –ü—Ä–∏ —Å–µ—Ç–µ–≤—ã—Ö —Å–±–æ—è—Ö –∏–ª–∏
 * –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–º HTTP-—Å—Ç–∞—Ç—É—Å–µ —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –æ—à–∏–±–∫—É –≤ –ª–æ–≥ –∏
 * –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç `false`, –∏—Å–∫–ª—é—á–µ–Ω–∏—è –Ω–µ –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ—Ç.
 *
 * @param string     $text  –¢–µ–∫—Å—Ç –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.
 * @param int|string $chat  –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞ –∏–ª–∏ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
 * @param array      $extra –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –∑–∞–ø—Ä–æ—Å–∞,
 *                          –Ω–∞–ø—Ä–∏–º–µ—Ä `reply_markup`.
 *
 * @return bool `true` –≤ —Å–ª—É—á–∞–µ —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏, –∏–Ω–∞—á–µ `false`.
 */
function send($text, $chat, $extra = []) {
    $url  = API_URL . 'sendMessage';
    $data = array_merge(['chat_id' => $chat, 'text' => $text], $extra);

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º cURL –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ POST-–∑–∞–ø—Ä–æ—Å–∞
    $ch = curl_init($url);
    curl_setopt_array($ch, [
        CURLOPT_POST           => true,
        CURLOPT_POSTFIELDS     => http_build_query($data),
        CURLOPT_RETURNTRANSFER => true,
    ]);

    $response = curl_exec($ch);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—à–∏–±–æ–∫ –Ω–∞ —É—Ä–æ–≤–Ω–µ cURL
    if ($response === false) {
        // –õ–æ–≥–∏—Ä—É–µ–º –æ–±–Ω–∞—Ä—É–∂–µ–Ω–Ω—É—é –Ω–∞ —É—Ä–æ–≤–Ω–µ cURL –æ—à–∏–±–∫—É –∏ –ø—Ä–µ–∫—Ä–∞—â–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É
        logError('–û—à–∏–±–∫–∞ cURL: ' . curl_error($ch));
        curl_close($ch);
        return false;
    }

    $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
    curl_close($ch);

    // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º HTTP-—Å—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞
    if ($httpCode < 200 || $httpCode >= 300) {
        // –§–∏–∫—Å–∏—Ä—É–µ–º –≤ –ª–æ–≥–∞—Ö –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π HTTP-—Å—Ç–∞—Ç—É—Å –∏ —Ç–µ–ª–æ –æ—Ç–≤–µ—Ç–∞
        logError('–û—à–∏–±–∫–∞ HTTP: —Å—Ç–∞—Ç—É—Å ' . $httpCode . '; –æ—Ç–≤–µ—Ç: ' . $response);
        return false;
    }

    return true;
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∏ —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö, –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –æ—Ç web_app.
 *
 * @param mixed $d –î–∞–Ω–Ω—ã–µ –∏–∑ web_app_data.
 *
 * @return bool true, –µ—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –≤–∞–ª–∏–¥–Ω—ã.
 */
function isValidWebAppData($d): bool {
    if (!is_array($d)) {
        return false;
    }

    $required = ['wrist_cm', 'wraps', 'pattern', 'magnet_mm', 'tolerance_mm'];
    foreach ($required as $key) {
        if (!array_key_exists($key, $d)) {
            return false;
        }
    }

    if (!is_numeric($d['wrist_cm']) || !is_numeric($d['magnet_mm']) || !is_numeric($d['tolerance_mm'])) {
        return false;
    }

    if (!is_numeric($d['wraps'])) {
        return false;
    }

    if (!is_string($d['pattern']) || $d['pattern'] === '') {
        return false;
    }

    $parts = array_map('trim', explode(',', $d['pattern']));
    if (empty($parts)) {
        return false;
    }

    foreach ($parts as $p) {
        if (!is_numeric($p)) {
            return false;
        }
    }

    if (isset($d['lang']) && !is_string($d['lang'])) {
        return false;
    }

    return true;
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –ª–∏ IP-–∞–¥—Ä–µ—Å –¥–∏–∞–ø–∞–∑–æ–Ω–∞–º Telegram.
 *
 * @param string $ip IP-–∞–¥—Ä–µ—Å –∫–ª–∏–µ–Ω—Ç–∞.
 *
 * @return bool
 */
function isTelegramIP(string $ip): bool {
    $ranges = [
        '149.154.160.0/20',
        '91.108.4.0/22',
    ];
    foreach ($ranges as $range) {
        if (ipInRange($ip, $range)) {
            return true;
        }
    }
    return false;
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –≤—Ö–æ–¥–∏—Ç –ª–∏ IP –≤ —É–∫–∞–∑–∞–Ω–Ω—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω CIDR.
 *
 * @param string $ip   –ü—Ä–æ–≤–µ—Ä—è–µ–º—ã–π IP-–∞–¥—Ä–µ—Å.
 * @param string $cidr –î–∏–∞–ø–∞–∑–æ–Ω –≤ —Ñ–æ—Ä–º–∞—Ç–µ CIDR.
 *
 * @return bool
 */
function ipInRange(string $ip, string $cidr): bool {
    [$subnet, $mask] = explode('/', $cidr);
    $ipLong     = ip2long($ip);
    $subnetLong = ip2long($subnet);
    $mask       = -1 << (32 - (int)$mask);
    $subnetLong &= $mask;
    return ($ipLong & $mask) === $subnetLong;
}

/**
 * –ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –≤ —Ñ–∞–π–ª –ª–æ–≥–æ–≤.
 *
 * –ö–∞–∂–¥–∞—è –∑–∞–ø–∏—Å—å –¥–æ–ø–æ–ª–Ω—è–µ—Ç—Å—è –≤—Ä–µ–º–µ–Ω–Ω–æ–π –º–µ—Ç–∫–æ–π –≤ —Ñ–æ—Ä–º–∞—Ç–µ ISO¬†8601,
 * —á—Ç–æ –æ–±–ª–µ–≥—á–∞–µ—Ç –∞–Ω–∞–ª–∏–∑ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Å–æ–±—ã—Ç–∏–π.
 *
 * @param string $message –¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏.
 *
 * @return void
 */
function logError(string $message): void {
    $time = date('c'); // –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤ —É–¥–æ–±–æ—á–∏—Ç–∞–µ–º–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
    error_log("[$time] $message\n", 3, LOG_FILE);
}
