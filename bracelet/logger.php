<?php
/**
 * Файл вспомогательных функций для логирования.
 *
 * Содержит константу `LOG_FILE` и функцию `logError` для записи
 * сообщений об ошибках в отдельный файл.
 */

// Путь к файлу логов приложения.
const LOG_FILE = __DIR__ . '/logs/app.log';

/**
 * Записывает сообщение об ошибке в лог приложения.
 *
 * При отсутствии каталога `logs` он будет создан автоматически.
 * Каждая запись дополняется временной меткой в формате ISO 8601
 * для удобного анализа последовательности событий.
 *
 * @param string $message Текст ошибки, которую требуется зафиксировать.
 *
 * @return void
 */
function logError(string $message): void
{
    // Определяем каталог, где должен находиться файл логов
    $dir = dirname(LOG_FILE);
    // Если каталога нет, создаём его рекурсивно
    if (!is_dir($dir)) {
        // Используем более строгие права доступа, чтобы ограничить
        // возможность чтения и записи логов посторонними пользователями.
        mkdir($dir, 0755, true);
    }

    // Заменяем все символы перевода строки на пробелы, чтобы избежать
    // подделки структуры файла логов через внедрение дополнительных строк.
    $safeMessage = preg_replace("/[\r\n]+/", ' ', $message);

    // Формируем строку с текущей временной меткой
    $time = date('c');
    // Записываем строку в файл логов, добавляя перевод строки
    error_log("[$time] $safeMessage\n", 3, LOG_FILE);
}
