<?php

declare(strict_types=1);

/**
 * Набор вспомогательных сетевых функций.
 *
 * В данный модуль вынесены операции, связанные с обработкой сетевых
 * заголовков и определением IP-адреса клиента. Благодаря этому код можно
 * переиспользовать в различных сценариях и удобно тестировать отдельно от
 * остальной логики вебхука.
 */

/**
 * Определяет IP-адрес клиента, учитывая возможность работы за прокси.
 *
 * ВАЖНО: предполагается, что ключи массива заголовков уже приведены к
 * нижнему регистру. Это избавляет от зависимости от особенностей
 * веб-сервера и позволяет обращаться к заголовкам без учёта регистра.
 * При наличии доверенного прокси можно использовать заголовок
 * `X-Forwarded-For`, который содержит цепочку IP-адресов. Первый элемент
 * этого списка соответствует исходному отправителю запроса. Если полученный
 * IP некорректен или прокси не доверен, следует опираться только на
 * `REMOTE_ADDR`.
 *
 * @param array<string,string> $headers        Заголовки входящего HTTP-запроса
 *                                            с именами в нижнем регистре.
 * @param array<string,mixed>  $server         Данные о запросе, обычно `$_SERVER`.
 * @param bool                 $trustForwarded Признак доверия к заголовку
 *                                            `X-Forwarded-For`. При `false`
 *                                            значение заголовка игнорируется.
 *
 * @return string IP-адрес клиента. Пустая строка возвращается, если ни один
 *                из источников не содержит валидного адреса.
 */
function resolveRemoteIp(array $headers, array $server, bool $trustForwarded = false): string
{
    // Используем IP из X-Forwarded-For только при доверенном прокси
    if ($trustForwarded && !empty($headers['x-forwarded-for'])) {
        // В заголовке может быть цепочка адресов через запятую
        $forwarded = explode(',', $headers['x-forwarded-for']);
        $candidate = trim($forwarded[0]); // Берём первый IP из списка

        // Проверяем корректность IP-адреса из заголовка
        if (filter_var($candidate, FILTER_VALIDATE_IP)) {
            return $candidate; // Возвращаем валидный адрес
        }
        // Если IP некорректен, игнорируем заголовок и используем REMOTE_ADDR
    }

    // Возвращаем REMOTE_ADDR, если заголовок отсутствует,
    // прокси не доверен или IP некорректен
    return $server['REMOTE_ADDR'] ?? '';
}

