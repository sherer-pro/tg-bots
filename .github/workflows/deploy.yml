# .github/workflows/deploy.yml
name: Build & Deploy (Hestia CP)

#######################################################################
# 1. ТРИГГЕРЫ
#######################################################################
on:
  push:
    branches:
      - main          # автодеплой при push в main
  workflow_dispatch:   # возможность запустить вручную в UI

#######################################################################
# 2. JOB
#######################################################################
jobs:
  build-deploy:
    # 2.1 где выполнять
    runs-on:
      - self-hosted
      - sherer-bots   # ярлык, заданный при config.sh --labels …

    # 2.2 условие: только коммиты с #deploy
    if: contains(join(github.event.commits.*.message, ' '), '#deploy')

    # 2.3 переменные окружения
    env:
      APP_PATH: /home/sherer/web/bots.sherer.pro/public_html

    ###################################################################
    # 3. ШАГИ
    ###################################################################
    steps:
      # -- 3.1 checkout ------------------------------------------------
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1     # shallow‑clone быстрее

      # -- 3.2 cache Composer packages --------------------------------
      - name: Cache Composer
        uses: actions/cache@v4
        with:
          path: ~/.composer/cache
          key: composer-${{ runner.os }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            composer-${{ runner.os }}-

      # -- 3.3 Composer -----------------------------------------
      - name: Install PHP deps
        run: composer install --no-dev --prefer-dist --no-interaction --optimize-autoloader

      # -- 3.6 deploy --------------------------------------------------
      - name: Deploy to public_html
        run: |
          rsync -a --delete \
                --exclude='.git' \
                --exclude='.gitignore' \
                --exclude='.github' \
                --exclude='LICENSE' \
                --exclude='README.md' \
                --exclude='phpunit.xml' \
                --exclude='.env.example' \
                --exclude='tests/' \
                --delete-excluded \
                "$GITHUB_WORKSPACE"/  "$APP_PATH"/
          
          - name: Copy local .env
            run: |
              cp /home/sherer/env/.env.bracelet "$APP_PATH/.env.bracelet"
      # -- 3.6 Telegram --------------------------------------------------
      - name: Notify Telegram
        if: always()
        env:
          TG_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          TG_CHAT_ID: ${{ secrets.TELEGRAM_CHATID }}
          STATUS: ${{ job.status }}       # success | failure | cancelled
        run: |
          TEXT=""
          if [ "$STATUS" = "success" ]; then
            TEXT="✅ Deploy *успешен* для ${{ github.repository }}%0Acommit: ${{ github.sha }}"
          else
            TEXT="❌ Deploy *$STATUS* в job `${{ github.job }}`%0Acommit: ${{ github.sha }}"
          fi
          curl -s --fail -X POST "https://api.telegram.org/bot${TG_TOKEN}/sendMessage" \
               -d chat_id="${TG_CHAT_ID}" \
               -d text="$TEXT" \
               -d parse_mode=Markdown

    ###################################################################
    # 4. ПРОЧЕЕ
    ###################################################################
    permissions:
      contents: read          # минимум, который нужен checkout
    timeout-minutes: 30

    # отменяем предыдущий job, если идёт новый push в ту же ветку
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
